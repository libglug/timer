platform:
  - x64

skip_branch_with_pr: true

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ID: msvc 2017
      GENERATOR: Visual Studio 15 2017 Win64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ID: msvc 2017 x86
      GENERATOR: Visual Studio 15 2017
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ID: mingw
      GENERATOR: MinGW Makefiles
      MAKE_PATH: c:\msys64\mingw64\bin
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ID: mingw x86
      GENERATOR: MinGW Makefiles
      MAKE_PATH: c:\msys64\mingw32\bin
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      ID: gcc
      GENERATOR: Unix Makefiles
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      ID: Ubuntu gcc x86
      GENERATOR: Unix Makefiles
      COMPILE_FLAGS: -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      ID: clang
      GENERATOR: Unix Makefiles
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      ID: gcc
      GENERATOR: Unix Makefiles
      C_COMPILER: -DCMAKE_C_COMPILER=/usr/bin/gcc
      CXX_COMPILER: -DCMAKE_CXX_COMPILER=/usr/bin/g++

install:
  - git submodule update --init --recursive
  - sh: >-
        if [ $APPVEYOR_BUILD_WORKER_IMAGE = "Ubuntu" ]; then
            sudo apt-get update
            sudo apt-get install gcc-multilib g++-multilib -y
        fi
before_build:
  # http://help.appveyor.com/discussions/problems/3193-cmake-building-for-mingw-issue-with-git-shexe
  - cmd: set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - cmd: set PATH=%MAKE_PATH%;%PATH%

build_script:
  - mkdir build && cd build
  - cmd: cmake -DCMAKE_BUILD_TYPE=RELEASE -G"%GENERATOR%" %C_COMPILER% %CXX_COMPILER% %COMPILE_FLAGS% ..
  - sh: cmake -DCMAKE_BUILD_TYPE=RELEASE -G"$GENERATOR" ${C_COMPILER} ${CXX_COMPILER} ${COMPILE_FLAGS} ..
  - cmake --build . --config Release

before_test:
  - cmake --build . --target examples check --config Release

test_script:
  - ctest -V
